name: Deploy Miner

on:
  workflow_dispatch:
  push:
    branches: [main, dev]

jobs:
#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Decide which logical environment (dev|prd) weâ€™re deploying
#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  set-env:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.pick.outputs.environment }}
    steps:
      - id: pick
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if   [[ "$BRANCH" == "main" ]];  then echo "environment=prd" >>"$GITHUB_OUTPUT"
          else                              echo "environment=dev"  >>"$GITHUB_OUTPUT"
          fi

#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Build, push and run the container
#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  deploy:
    needs: set-env
    runs-on: ubuntu-latest
    environment: ${{ needs.set-env.outputs.environment }}

    steps:
      - uses: actions/checkout@v4

      # ðŸ“¦ Bundle **all** repository / environment secrets âžœ DEPLOY_ENV_B64
      - name: Pack secrets
        id: bundle
        env:
          RAW_JSON: ${{ toJson(secrets) }}   # every secret, one shot
        run: |
          echo "::add-mask::$RAW_JSON"       # keep log clean
          DEPLOY_ENV_B64=$(printf '%s' "$RAW_JSON" | base64 -w0)
          echo "DEPLOY_ENV_B64=$DEPLOY_ENV_B64" >> "$GITHUB_ENV"

      - uses: actions/setup-python@v4
        with: { python-version: "3.11" }

      - name: Tiny runtime deps
        run: sudo apt-get -yq update && sudo apt-get -yq install jq

      - name: Make scripts executable
        run: chmod +x docker_*.sh

      - name: Run deployment
        env:
          DEPLOY_ENV_B64: ${{ env.DEPLOY_ENV_B64 }}
        run: ./docker_deploy.sh --env "${{ needs.set-env.outputs.environment }}"
